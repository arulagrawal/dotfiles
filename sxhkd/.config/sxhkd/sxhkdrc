#!/bin/sh
#                 ██      ██          ██
#                ░██     ░██         ░██
#  ██████ ██   ██░██     ░██  ██     ░██
# ██░░░░ ░░██ ██ ░██████ ░██ ██   ██████
#░░█████  ░░███  ░██░░░██░████   ██░░░██
# ░░░░░██  ██░██ ░██  ░██░██░██ ░██  ░██
# ██████  ██ ░░██░██  ░██░██░░██░░██████
#░░░░░░  ░░   ░░ ░░   ░░ ░░  ░░  ░░░░░░ 

#
# wm independent hotkeys
#

# open alacritty
super + Return
    alacritty

# open st
super + shift + Return
    st

# scratchpad/dropdown
super + d
    ~/scripts/bspwm/dropdown.sh

# draw a terminal window
super + shift + d
    bspc rule -a \* -o state=floating rectangle=$(slop -f "%g") && st

# save song to spotify
super + alt + s
    ~/scripts/go/spotify_add; \
    dunstify -u normal "Song added to spotify";

# preselect in reverse fashion to normal
super + ctrl + Return
    ~/scripts/bspwm/auto-presel.sh

# program launcher - rofi
super + @space
    rofi -show combi -theme drac -terminal st -font "SF Pro Display 14" -matching fuzzy


# launch browser - chromium/firefox
super + {_,shift + }b
    {firefox, chromium}

# launch vscodium
super + v
    vscodium

# launch ranger/pcmanfm
super + {_,shift + }f
    {alacritty -e ranger, pcmanfm}

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd

# launch youtube dmenu
super + y
    ~/scripts/bin/dmenu_youtube

# lock screen
super + ctrl + alt + l
    ~/scripts/rice/lock.sh

# take screenshot
Print; {m, w}
    ~/scripts/utility/screenshot.sh whole {monitor, whole};

# take region screenshot
shift + Print
    ~/scripts/utility/screenshot.sh area;

# reload bars
super + shift + r
    pkill polybar && polybar -r burs & disown; \
    polybar -r bur & disown;

# open clipboard manager
super + c
    clipmenu

#
# bspwm keybinds
#

# quit bspwm normally
super + alt + Escape
    bspc quit

# close and kill
super + {_,shift + }w
    bspc node -{c,k}

# rotate desktop
super + {_,shift + }r
    bspc node @/ --rotate {90,-90}

# insert receptacle, or cleanr receptacles on current desktop
super + {_,shift} + i
    insert={true,false}; \
    $insert && bspc node -i || \
    for win in `bspc query -N -n .leaf.!window`; do bspc node $win -k ; done;

# make split ratios equal
super + equal
    bspc node @/ --equalize

# make split ratios balanced
super + minus
    bspc node @/ --balance

# send window to other monitor
super + shift + m
    bspc node -m next

# focus next monitor
super + m
    bspc monitor -f next

# swap the desktops of the monitors
super + ctrl + shift + m
    bspc desktop -s next:focused

# send the focused node to the newest preselected node
super + shift + y
    bspc node focused.local -n newest.!automatic.local

# swap the current node and the biggest node
super + shift + g
    bspc node -s biggest.local

#
# state/flags
#

# set the window state
super + s; {t,f,s}
    ~/scripts/bspwm/state.sh {tiling, fullscreen, sticky}

# mark a node
super + ctrl + m
    bspc node -g marked

#
# focus/swap/move/warp
#
## vim binds

# focus the node in the given direction
super + {h,j,k,l}
    ~/scripts/bspwm/focus.sh {west,south,north,east}
    #bspc node -f {west,south,north,east}

# move the node in the given direction
super + shift + {h,j,k,l}
    ~/scripts/bspwm/move.sh {west,south,north,east}

# warp window in the given direction
super + ctrl + shift + {h,j,k,l}
    bspc node -n {west,south,north,east} --follow

## arrow key binds
# focus the node in the given direction
super + {Left, Down, Up, Right}
    ~/scripts/bspwm/focus.sh {west,south,north,east}

# move the node in the given direction
super + shift + {Left, Down, Up, Right}
    ~/scripts/bspwm/move.sh {west,south,north,east}

# warp window in the given direction
super + ctrl + shift + {Left, Down, Up, Right}
    bspc node -n {west,south,north,east} --follow

# focus the next/previous occupied desktop in the current monitor
super + {q,e}
    bspc desktop -f {prev,next}.local.occupied

# focus the next/previous occupied desktop in the current monitor
super + ctrl + {q,e}
    bspc desktop -f {prev,next}.local

# send to next/previous desktop in current monitor
super + shift + {q,e}
    bspc node -d {prev,next}.local

# focus the last desktop that has stuff in this monitor
super + grave
    bspc desktop -f last.occupied.local

# focus the next/previous node in the current desktop
super + {_,shift + }Tab
    bspc node -f {next,prev}.local

# focus the older or newer node in the focus history
#super + {o,i}
#    bspc wm -h off; \
#    bspc node {older,newer} -f; \
#    bspc wm -h on

# focus to the given desktop
super + {1-9}
    bspc desktop -f 'focused:^{1-9}'

# send node to desktop on current monitor
super + shift + {1-9}
    bspc node -d 'focused:^{1-9}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

# preselect the direction
super + ctrl + {Left, Down, Up, Right}
    bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
    bspc node -o 0.{1-9}

# cancel all preselections
super + ctrl + space
    for window in $(bspc query -N); do bspc node $window -p cancel; done

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
    ~/scripts/bspwm/resize.sh {west,south,north,east}

# expand a window by moving one of its side outward
super + alt + {Left, Down, Up, Right}
    ~/scripts/bspwm/resize.sh {west,south,north,east}

##Media Keys
# volume control
XF86Audio{LowerVolume,RaiseVolume,Mute}
    pamixer {-d 5,-i 5,-t}

# media control
XF86Audio{Next,Prev,Play,Stop}
    playerctl {next,previous,play-pause,stop}
